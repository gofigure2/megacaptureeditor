#! /usr/bin/python

# Impoirt PySide
import sys
import platform

import PySide
from PySide.QtCore import *
from PySide.QtGui import *

import InformationWidget

class EditWidget(QWidget):

    #init main window
    def __init__(self, parent=None):
        super(EditWidget, self).__init__(parent)
        # Create widgets
        self.SelectFile = QPushButton("Select File")
        self.SelectedFile = QLabel("No File Selected")
        # connect buttons
        QObject.connect(self.SelectFile, SIGNAL("clicked()"),
                        self.GetFileName)
        # manage layout 
        self.layout1 = QHBoxLayout()
        self.layout1.addWidget(self.SelectedFile)
        self.layout1.addWidget(self.SelectFile)

        # editing widget
        self.EditingWidget = QWidget(self)
        self.SetupEditingWidget
        # combo boxex and labels...
        # ....
        # ....
        # ....

        # editing widget layout
        self.layout2 = QHBoxLayout()
        self.layout2.addWidget(self.EditingWidget)
        self.layout2.addWidget(InformationWidget.InformationWidget())

        # Widget layout
        self.layout = QVBoxLayout()
        self.layout.addItem(self.layout1)
        self.layout.addItem(self.layout2)
        self.setLayout(self.layout)

    # Get Name of the target file slot
    def GetFileName(self):
        fileName, ok = QFileDialog.getOpenFileName(self, "Select file")
        
        if ok == 1:
            if fileName.endswith(".meg") == 1:
                self.SelectedFile.setText(fileName)
                print(".meg file")
            elif fileName.endswith(".megx") == 1:
                self.SelectedFile.setText(fileName)
                print(".megx file")
            else:
                print("not a megacapture file")

    def SetupEditingWidget(self):
        # version
        self.versionLabel = QLabel("Version:")
        self.versionLayout = QHBoxLayout(self)
        self.versionLayout.addWidget(self.versionLabel)
       
        # experiment title
        self.experimentTitleLabel = QLabel("Experiment title:")
        self.experimentTitle = QLineEdit("");
        self.experimentTitleLayout = QHBoxLayout()
        self.experimentTitleLayout.addWidget(self.experimentTitleLabel)
        self.experimentTitleLayout.addWidget(self.experimentTitle)
      
        # experiment description
        self.experimentDescriptionLabel = QLabel("Experiment description:")
        self.experimentDescription = QLineEdit("");
        self.experimentDescriptionLayout = QHBoxLayout()
        self.experimentDescriptionLayout.addWidget(self.experimentDescriptionLabel)
        self.experimentDescriptionLayout.addWidget(self.experimentDescription)
        
        # time interval
        self.timeIntervalLabel = QLabel("Time interval:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        
        # objective
        self.objectiveLabel = QLabel("Objective:")
        self.objective = QSpinBox(1);
        self.objectiveLayout = QHBoxLayout()
        self.objectiveLayout.addWidget(self.objectiveLabel)
        self.objectiveLayout.addWidget(self.objective)

        # x voxel size
        self.voxelSizeXLabel = QLabel("Voxel size X:")
        self.voxelSizeX = QSpinBox(1);
        self.voxelSizeXLayout = QHBoxLayout()
        self.voxelSizeX.addWidget(self.voxelSizeXLabel)
        self.voxelSizeX.addWidget(self.voxelSizeX)


        self.voxelSizeY = QLabel("Voxel size Y:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.voxelSizeZ = QLabel("Voxel size Z:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.dimensionX = QLabel("Dimension X:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.dimensionY = QLabel("Dimension Y:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.dimensionCO = QLabel("Dimension CO:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.dimensionRO = QLabel("Dimension RO:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.dimensionZT = QLabel("Dimension ZT:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.dimensionYT = QLabel("Dimension YT:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.dimensionXT = QLabel("Dimension XY:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.dimensionTM = QLabel("Dimension TM:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.dimensionZS = QLabel("Dimension ZS:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.dimensionCH = QLabel("Dimension CH:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.channelColor = QLabel("Channel color:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.channelDepth = QLabel("Channel depth:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)
        self.fileType = QLabel("File type:")
        self.timeInterval = QSpinBox(1);
        self.timeIntervalLayout = QHBoxLayout()
        self.timeIntervalLayout.addWidget(self.timeIntervalLabel)
        self.timeIntervalLayout.addWidget(self.timeInterval)

        # Widget layout
        self.layout = QVBoxLayout()
        self.layout.addItem(self.versionLayout)
        self.layout.addItem(self.experimentTitleLayout)
        self.layout.addItem(self.experimentDescriptionLayout)
        self.layout.addItem(self.timeIntervalLayout)
        self.layout.addItem(self.objectiveLayout)
        self.layout.addItem(self.voxelSizeXLayout)
        
        self.EditingWidget.setLayout(self.layout)
